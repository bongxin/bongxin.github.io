import{_ as t,a as n,b as e,c as l,d as h,e as p,f as k}from"./chunks/写入固件中.DOxzbUmo.js";import{_ as r,c as d,J as a,aS as s,E as F,o}from"./chunks/framework.BItddkxz.js";const c="/assets/immortalWrt.B5giZudf.png",x=JSON.parse('{"title":"红米AX6000刷UBoot和OpenWrt固件","description":"","frontmatter":{},"headers":[],"relativePath":"skill/DevOps/openwrt/AX6000刷固件.md","filePath":"skill/DevOps/openwrt/AX6000刷固件.md","lastUpdated":1736759642000}'),g={name:"skill/DevOps/openwrt/AX6000刷固件.md"},y=s('<h1 id="红米ax6000刷uboot和openwrt固件" tabindex="-1">红米AX6000刷UBoot和OpenWrt固件 <a class="header-anchor" href="#红米ax6000刷uboot和openwrt固件" aria-label="Permalink to &quot;红米AX6000刷UBoot和OpenWrt固件&quot;">​</a></h1><ul><li>开启SSH</li><li>刷入过渡固件</li><li>刷入OpenWrt固件</li></ul><h2 id="降级官方固件" tabindex="-1">降级官方固件 <a class="header-anchor" href="#降级官方固件" aria-label="Permalink to &quot;降级官方固件&quot;">​</a></h2><p>下载固件地址：<a href="https://cdn.cnbj1.fds.api.mi-img.com/xiaoqiang/rom/rb06/miwifi_rb06_firmware_847e9_1.0.48.bin" target="_blank" rel="noreferrer">https://cdn.cnbj1.fds.api.mi-img.com/xiaoqiang/rom/rb06/miwifi_rb06_firmware_847e9_1.0.48.bin</a></p><div class="warning custom-block"><p class="custom-block-title">注意</p><p>要降级：导航到 Upload firmware （上传固件） 页面并选择适当的软件版本。它会抱怨降级。编辑 url 并将末尾的 <html>0</html> 更改为 <html>1</html>，然后按 Enter。或者，如果已经有 <html>1</html>（在 v1.0.64 上看到），请更改为 <html>2</html>。降级将继续进行。</p></div><h2 id="开启ssh" tabindex="-1">开启SSH <a class="header-anchor" href="#开启ssh" aria-label="Permalink to &quot;开启SSH&quot;">​</a></h2>',6),C=s('<p>文档地址：<a href="https://qust.me/post/ax6000-shellclash/" target="_blank" rel="noreferrer">红米 AX6000 最强 CPU 的硬路由｜解锁 SSH 安装 ShellClash 教程</a></p><h3 id="获取stok" tabindex="-1">获取stok <a class="header-anchor" href="#获取stok" aria-label="Permalink to &quot;获取stok&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">http://192.168.31.1/cgi-bin/luci/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;stok</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">c9d5f7d3ccfc896e9f04bea8c88d0938/web/prosetting/qos</span></span></code></pre></div><h3 id="开启调试模式" tabindex="-1">开启调试模式 <a class="header-anchor" href="#开启调试模式" aria-label="Permalink to &quot;开启调试模式&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">http://192.168.31.1/cgi-bin/luci/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;stok</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">c9d5f7d3ccfc896e9f04bea8c88d0938/api/misystem/set_sys_time?timezone=%20%27%20%3B%20zz%3D%24%28dd%20if%3D%2Fdev%2Fzero%20bs%3D1%20count%3D2%202%3E%2Fdev%2Fnull%29%20%3B%20printf%20%27%A5%5A%25c%25c%27%20%24zz%20%24zz%20%7C%20mtd%20write%20-%20crash%20%3B%20</span></span></code></pre></div><h3 id="重启" tabindex="-1">重启 <a class="header-anchor" href="#重启" aria-label="Permalink to &quot;重启&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">http://192.168.31.1/cgi-bin/luci/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;stok</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">c9d5f7d3ccfc896e9f04bea8c88d0938/api/misystem/set_sys_time?timezone=%20%27%20%3b%20reboot%20%3b%20</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>重启后，要重新获取新的 <code>stok</code></p></div><h3 id="设置永久开启telnet" tabindex="-1">设置永久开启telnet <a class="header-anchor" href="#设置永久开启telnet" aria-label="Permalink to &quot;设置永久开启telnet&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">http://192.168.31.1/cgi-bin/luci/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;stok</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">7ce0ad34047a948b4aa800ac8d1d2989/api/misystem/set_sys_time?timezone=%20%27%20%3B%20bdata%20set%20telnet_en%3D1%20%3B%20bdata%20set%20ssh_en%3D1%20%3B%20bdata%20set%20uart_en%3D1%20%3B%20bdata%20commit%20%3B%20</span></span></code></pre></div><h3 id="重启-1" tabindex="-1">重启 <a class="header-anchor" href="#重启-1" aria-label="Permalink to &quot;重启&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">http://192.168.31.1/cgi-bin/luci/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;stok</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">7ce0ad34047a948b4aa800ac8d1d2989/api/misystem/set_sys_time?timezone=%20%27%20%3b%20reboot%20%3b%20</span></span></code></pre></div><h3 id="telnet连接路由器" tabindex="-1">Telnet连接路由器 <a class="header-anchor" href="#telnet连接路由器" aria-label="Permalink to &quot;Telnet连接路由器&quot;">​</a></h3><p><img src="'+t+`" alt=""></p><h3 id="永久开启并固化ssh" tabindex="-1">永久开启并固化ssh <a class="header-anchor" href="#永久开启并固化ssh" aria-label="Permalink to &quot;永久开启并固化ssh&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;admin\\nadmin&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> passwd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvram</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ssh_en=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvram</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> telnet_en=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvram</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uart_en=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvram</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> boot_wait=on</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvram</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;s/channel=.*/channel=&quot;debug&quot;/g&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/init.d/dropbear</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/etc/init.d/dropbear</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /data/auto_ssh</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /data/auto_ssh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -O</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://fastly.jsdelivr.net/gh/lemoeo/AX6S@main/auto_ssh.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auto_ssh.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uci</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firewall.auto_ssh=include</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uci</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firewall.auto_ssh.type=&#39;script&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uci</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firewall.auto_ssh.path=&#39;/data/auto_ssh/auto_ssh.sh&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uci</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firewall.auto_ssh.enabled=&#39;1&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uci</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firewall</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uci</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> system.@system[0].timezone=&#39;CST-8&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uci</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> system.@system[0].webtimezone=&#39;CST-8&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uci</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> system.@system[0].timezoneindex=&#39;2.84&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uci</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mtd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> erase</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> crash</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reboot</span></span></code></pre></div><p>这个命令将 root 用户的密码设置为 admin。</p><p><img src="`+n+'" alt=""></p><h3 id="ssh连接路由器" tabindex="-1">SSH连接路由器 <a class="header-anchor" href="#ssh连接路由器" aria-label="Permalink to &quot;SSH连接路由器&quot;">​</a></h3><p><img src="'+e+'" alt=""></p><h2 id="刷入openwrt固件" tabindex="-1">刷入OpenWrt固件 <a class="header-anchor" href="#刷入openwrt固件" aria-label="Permalink to &quot;刷入OpenWrt固件&quot;">​</a></h2>',21),m=s(`<p>文档地址：<a href="https://qust.me/post/ax6000-openwrt/" target="_blank" rel="noreferrer">红米 ax6000 刷 openwrt 教程，终于有完善好用的 openwrt 了</a></p><h3 id="刷入过渡固件" tabindex="-1">刷入过渡固件 <a class="header-anchor" href="#刷入过渡固件" aria-label="Permalink to &quot;刷入过渡固件&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /proc/cmdline</span></span></code></pre></div><p>这一步需要路由器是正常联网的，首先 ssh 连接上红米 ax6000 ，执行上面的命令，查看返回的 firmware 等于 0 还是 1。 （我截图这里是 1 ）</p><p>如果是 0 执行</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvram</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> boot_wait=on</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvram</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uart_en=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvram</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flag_boot_rootfs=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvram</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flag_last_success=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvram</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flag_boot_success=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvram</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flag_try_sys1_failed=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvram</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flag_try_sys2_failed=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvram</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ubiformat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/mtd9</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/initramfs-factory.ubi</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reboot</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span></span></code></pre></div><p>如果是 1 执行</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvram</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> boot_wait=on</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvram</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uart_en=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvram</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flag_boot_rootfs=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvram</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flag_last_success=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvram</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flag_boot_success=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvram</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flag_try_sys1_failed=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvram</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flag_try_sys2_failed=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvram</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ubiformat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/mtd8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/initramfs-factory.ubi</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reboot</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span></span></code></pre></div><h4 id="上传过渡固件" tabindex="-1">上传过渡固件 <a class="header-anchor" href="#上传过渡固件" aria-label="Permalink to &quot;上传过渡固件&quot;">​</a></h4><ul><li>sysupgrade文件：<code>x-wrt-24.04-b202410201421-mediatek-filogic-xiaomi_redmi-router-ax6000-stock-squashfs-sysupgrade.bin</code></li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ubiformat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/mtd8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/initramfs-factory.ubi</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reboot</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span></span></code></pre></div><div class="danger custom-block"><p class="custom-block-title">注意</p><p>如果发现以下错误，需留意根据 <code>firmware</code> 等于 <code>0</code> 还是 <code>1</code> 来选择 <code>mtd8</code> 还是 <code>mtd9</code>。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>ubiformat: error!: cannot open &quot;/dev/mtd8&quot;</span></span>
<span class="line"><span>           error 13 (Permission denied)</span></span></code></pre></div></div><h3 id="访问过渡固件" tabindex="-1">访问过渡固件 <a class="header-anchor" href="#访问过渡固件" aria-label="Permalink to &quot;访问过渡固件&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">注意</p><p>如果没有找到OpenWrt的wifi的话，请使用网线连接路由来访问过渡固件</p></div><h4 id="查看过渡固件ip" tabindex="-1">查看过渡固件ip <a class="header-anchor" href="#查看过渡固件ip" aria-label="Permalink to &quot;查看过渡固件ip&quot;">​</a></h4><p><img src="`+l+'" alt=""></p><h4 id="浏览器访问过渡固件" tabindex="-1">浏览器访问过渡固件 <a class="header-anchor" href="#浏览器访问过渡固件" aria-label="Permalink to &quot;浏览器访问过渡固件&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>http://192.168.15.1/</span></span></code></pre></div><ul><li>用户名和密码：admin/admin</li></ul><p><img src="'+h+'" alt=""></p><h3 id="连接wifi" tabindex="-1">连接Wifi <a class="header-anchor" href="#连接wifi" aria-label="Permalink to &quot;连接Wifi&quot;">​</a></h3><p>固件无线默认名称：X-WRT_XXXX，密码：88888888 固件管理界面：<a href="http://192.168.15.1/" target="_blank" rel="noreferrer">http://192.168.15.1/</a> 管理界面账户密码：admin/admin SSH后台登录：root/admin</p><div class="warning custom-block"><p class="custom-block-title">提示</p><p>连接WiFi后，需要断开网线，如果连接网线，会默认优先走网线网络，导致192.168.15.1管理后台访问不了</p></div><h3 id="刷写固件" tabindex="-1">刷写固件 <a class="header-anchor" href="#刷写固件" aria-label="Permalink to &quot;刷写固件&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">提示</p><p>immortalWRT下载地址：<a href="https://mirrors.zuoyx.xyz/openwrt/releases/21.02-SNAPSHOT/targets/mediatek/mt7986/" target="_blank" rel="noreferrer">https://mirrors.zuoyx.xyz/openwrt/releases/21.02-SNAPSHOT/targets/mediatek/mt7986/</a></p></div><p><img src="'+p+'" alt=""></p><p>打开系统-备份与升级，选择刷写固件。浏览里找到下载好的 openwrt 固件，选择上传。上传好后选择取消勾选保留当前配置然后选择继续。等待刷写完成自动重启，就会进入新的 openwrt 固件。</p><p><img src="'+k+'" alt=""></p><h2 id="访问openwrt" tabindex="-1">访问OpenWRT <a class="header-anchor" href="#访问openwrt" aria-label="Permalink to &quot;访问OpenWRT&quot;">​</a></h2><ul><li>后台地址：192.168.1.1</li><li>用户名：root</li><li>密码：</li></ul><h2 id="连接wifi-1" tabindex="-1">连接Wifi <a class="header-anchor" href="#连接wifi-1" aria-label="Permalink to &quot;连接Wifi&quot;">​</a></h2><ul><li>名称：immortalWRT-2.4G/immortalWRT-5G</li></ul><p><img src="'+c+'" alt=""></p>',33);function u(B,b,_,f,E,v){const i=F("BilibiliPlayer");return o(),d("div",null,[y,a(i,{"base-src":"//player.bilibili.com/player.html?isOutside=true&aid=260611365&bvid=BV1Qe411T7TZ&cid=833815481&p=1"}),C,a(i,{"base-src":"//player.bilibili.com/player.html?isOutside=true&aid=304933810&bvid=BV1oP411F7Y2&cid=886896357&p=1"}),m])}const P=r(g,[["render",u]]);export{x as __pageData,P as default};
