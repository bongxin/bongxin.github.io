import{_ as a,c as s,o as i,aS as e}from"./chunks/framework.Cuoppmxr.js";const g=JSON.parse('{"title":"常见操作","description":"","frontmatter":{},"headers":[],"relativePath":"skill/DevOps/ubuntu/常见操作/常见操作.md","filePath":"skill/DevOps/ubuntu/常见操作/常见操作.md","lastUpdated":1723461236000}'),t={name:"skill/DevOps/ubuntu/常见操作/常见操作.md"},h=e(`<h1 id="常见操作" tabindex="-1">常见操作 <a class="header-anchor" href="#常见操作" aria-label="Permalink to &quot;常见操作&quot;">​</a></h1><h2 id="查看端口占用及关闭" tabindex="-1">查看端口占用及关闭 <a class="header-anchor" href="#查看端口占用及关闭" aria-label="Permalink to &quot;查看端口占用及关闭&quot;">​</a></h2><h3 id="方法一" tabindex="-1">方法一 <a class="header-anchor" href="#方法一" aria-label="Permalink to &quot;方法一&quot;">​</a></h3><h4 id="根据端口查找进程" tabindex="-1">根据端口查找进程 <a class="header-anchor" href="#根据端口查找进程" aria-label="Permalink to &quot;根据端口查找进程&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lsof</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i:端口号</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lsof</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span></span></code></pre></div><h4 id="杀掉进程" tabindex="-1">杀掉进程 <a class="header-anchor" href="#杀掉进程" aria-label="Permalink to &quot;杀掉进程&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kill</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -9</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PID号</span></span></code></pre></div><h3 id="方法二" tabindex="-1">方法二 <a class="header-anchor" href="#方法二" aria-label="Permalink to &quot;方法二&quot;">​</a></h3><p>使用netstat命令</p><h4 id="查看已经连接的服务端口-established" tabindex="-1">查看已经连接的服务端口（ESTABLISHED） <a class="header-anchor" href="#查看已经连接的服务端口-established" aria-label="Permalink to &quot;查看已经连接的服务端口（ESTABLISHED）&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">netstat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span></span></code></pre></div><h4 id="查看所有的服务端口-listen-established" tabindex="-1">查看所有的服务端口（LISTEN，ESTABLISHED） <a class="header-anchor" href="#查看所有的服务端口-listen-established" aria-label="Permalink to &quot;查看所有的服务端口（LISTEN，ESTABLISHED）&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">netstat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ap</span></span></code></pre></div><h4 id="查看指定端口-可以结合grep命令" tabindex="-1">查看指定端口，可以结合grep命令： <a class="header-anchor" href="#查看指定端口-可以结合grep命令" aria-label="Permalink to &quot;查看指定端口，可以结合grep命令：&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">netstat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8080</span></span></code></pre></div>`,15),l=[h];function n(p,d,o,r,c,k){return i(),s("div",null,l)}const b=a(t,[["render",n]]);export{g as __pageData,b as default};
