import{_ as s,c as a,o as e,aS as i}from"./chunks/framework.BItddkxz.js";const g=JSON.parse('{"title":"WSL2","description":"","frontmatter":{},"headers":[],"relativePath":"skill/DevOps/others/wsl2/index.md","filePath":"skill/DevOps/others/wsl2/index.md","lastUpdated":1740568194000}'),n={name:"skill/DevOps/others/wsl2/index.md"},t=i(`<h1 id="wsl2" tabindex="-1">WSL2 <a class="header-anchor" href="#wsl2" aria-label="Permalink to &quot;WSL2&quot;">​</a></h1><h2 id="简单命令" tabindex="-1">简单命令 <a class="header-anchor" href="#简单命令" aria-label="Permalink to &quot;简单命令&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置wsl2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --set-default-version</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看安装的子系统</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --list</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --verbose</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 卸载安装的子系统</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --unregister</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Ubuntu-24.04</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 关闭wsl</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --shutdown</span></span></code></pre></div><h2 id="安装子系统" tabindex="-1">安装子系统 <a class="header-anchor" href="#安装子系统" aria-label="Permalink to &quot;安装子系统&quot;">​</a></h2><p>上微软应用商店搜索<code>wsl</code></p><h2 id="设置systemd" tabindex="-1">设置systemd <a class="header-anchor" href="#设置systemd" aria-label="Permalink to &quot;设置systemd&quot;">​</a></h2><p>在 WSL 2 中安装的 Ubuntu 可能默认使用的是 SysVinit 而不是 systemd</p><p>在/etc目录新建wsl.conf文件，添加如下内容</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[boot]</span></span>
<span class="line"><span>systemd=true</span></span></code></pre></div><h2 id="安装docker-废弃" tabindex="-1">安装Docker(废弃) <a class="header-anchor" href="#安装docker-废弃" aria-label="Permalink to &quot;安装Docker(废弃)&quot;">​</a></h2><h3 id="_0卸载" tabindex="-1">0卸载 <a class="header-anchor" href="#_0卸载" aria-label="Permalink to &quot;0卸载&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sudo apt-get remove -y docker docker-engine docker.io containerd runc</span></span></code></pre></div><h3 id="_1更新软件包" tabindex="-1">1更新软件包 <a class="header-anchor" href="#_1更新软件包" aria-label="Permalink to &quot;1更新软件包&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sudo apt update</span></span>
<span class="line"><span>sudo apt upgrade</span></span></code></pre></div><h3 id="_2安装docker依赖" tabindex="-1">2安装docker依赖 <a class="header-anchor" href="#_2安装docker依赖" aria-label="Permalink to &quot;2安装docker依赖&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sudo apt-get install ca-certificates curl gnupg lsb-release</span></span></code></pre></div><h3 id="_3添加docker官方gpg密钥" tabindex="-1">3添加Docker官方GPG密钥 <a class="header-anchor" href="#_3添加docker官方gpg密钥" aria-label="Permalink to &quot;3添加Docker官方GPG密钥&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sudo curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span></span></code></pre></div><h3 id="_4添加docker软件源" tabindex="-1">4添加Docker软件源 <a class="header-anchor" href="#_4添加docker软件源" aria-label="Permalink to &quot;4添加Docker软件源&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sudo add-apt-repository &quot;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot;</span></span></code></pre></div><h3 id="_5再次更新软件包" tabindex="-1">5再次更新软件包 <a class="header-anchor" href="#_5再次更新软件包" aria-label="Permalink to &quot;5再次更新软件包&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sudo apt update</span></span>
<span class="line"><span>sudo apt upgrade</span></span></code></pre></div><h3 id="_6安装docker-ce" tabindex="-1">6安装docker-ce <a class="header-anchor" href="#_6安装docker-ce" aria-label="Permalink to &quot;6安装docker-ce&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sudo apt-get install docker-ce</span></span></code></pre></div><h3 id="_7配置用户组" tabindex="-1">7配置用户组 <a class="header-anchor" href="#_7配置用户组" aria-label="Permalink to &quot;7配置用户组&quot;">​</a></h3><p>默认情况下，只有root用户和docker组的用户才能运行Docker命令。我们可以将当前用户添加到docker组，以避免每次使用Docker时都需要使用sudo。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sudo usermod -aG docker $USER</span></span></code></pre></div><h3 id="_8配置daemon-json" tabindex="-1">8配置daemon.json <a class="header-anchor" href="#_8配置daemon-json" aria-label="Permalink to &quot;8配置daemon.json&quot;">​</a></h3><p>在/etc/docker下创建一个daemon.json：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>{</span></span>
<span class="line"><span>  &quot;registry-mirrors&quot;: [&quot;https://xxxxxxxx.mirror.aliyuncs.com&quot;]</span></span>
<span class="line"><span>}</span></span></code></pre></div><h3 id="_9设置启动项和启动docker" tabindex="-1">9设置启动项和启动docker <a class="header-anchor" href="#_9设置启动项和启动docker" aria-label="Permalink to &quot;9设置启动项和启动docker&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sudo systemctl enable docker ; sudo systemctl start docker</span></span></code></pre></div><h2 id="ubuntu-docker安装" tabindex="-1">Ubuntu Docker安装 <a class="header-anchor" href="#ubuntu-docker安装" aria-label="Permalink to &quot;Ubuntu Docker安装&quot;">​</a></h2><p>使用国内 daocloud 一键安装命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sudo curl -sSL https://get.daocloud.io/docker | sh</span></span></code></pre></div>`,35),l=[t];function p(o,d,c,h,r,u){return e(),a("div",null,l)}const b=s(n,[["render",p]]);export{g as __pageData,b as default};
